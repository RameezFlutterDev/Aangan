plugins {
    id "com.android.application"
    // FlutterFire Configuration for Firebase
    id 'com.google.gms.google-services'
    id "kotlin-android"
    // Flutter Gradle Plugin (must be after Android and Kotlin plugins)
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

android {
    namespace = "com.example.xupstore"
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // Unique Application ID for the app
        applicationId = "com.example.xupstore"
        // Minimum and target SDK versions
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        // Versioning
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    buildTypes {
        release {
            // Add release signing configuration for production builds
            // Ensure you configure this properly for secure release APKs
            signingConfig = signingConfigs.debug // Replace with signingConfigs.release for production
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}

// Apply the Google Services plugin for Firebase
apply plugin: 'com.google.gms.google-services'
